/*flex*/
@mixin flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

@mixin flex-direction($direction) {
    -webkit-flex-direction: $direction;
    -moz-flex-direction: $direction;
    -ms-flex-direction: $direction;
    flex-direction: $direction;
}

@mixin flex-wrap($wrap) {
    -webkit-flex-wrap: $wrap;
    -moz-flex-wrap: $wrap;
    -ms-flex-wrap: $wrap;
    flex-wrap: $wrap;
}

@mixin align-items($align) {
    -webkit-align-items: $align;
    -moz-align-items: $align;
    -ms-align-items: $align;
    align-items: $align;
}

@mixin justify-content($justify) {
    -webkit-justify-content: $justify;
    -moz-justify-content: $justify;
    -ms-justify-content: $justify;
    justify-content: $justify;
    -ms-flex-pack: $justify;
}

// rotate
@mixin rotate ($deg) {
    @include transform(rotate(#{$deg}deg));
}

@mixin transform($property) {
     -moz-transform: $property;
    -o-transform: $property;
    -ms-transform: $property;
    -webkit-transform: $property;
    transform: $property;
  }
  /* Mixins for media query:
  - XL in tuor normal SCSS file
  - LG in mixin called largeLaptop (support from 0 to 1366px)
  - portrait tablet (suppor from mobile to tablet)
  - XS for mobile (support max 767px)
  - add mixin to media query if you need
  */

  @mixin largeLaptop {
      @media (min-width: 1366px) {
          @content;
      }
  }
  @mixin mediumLaptop {
    @media (min-width: 768px) and (max-width: 1024px) {
      @content;
    }
  }
    @mixin portraitTablet {
        @media (max-width: 768px) {
          @content;
    }
  }
    @mixin mobile {
        @media (max-width: 767px) {
          @content;
    }
  }

  /* Main properties that control the layout direction are:
-----------------------------------------------
- Direction (LTR/RTL)
- Float (left/right)
- Margin 
- Padding
- Absolute position (left/right)
- Background position (left/right)
- Border
- Border radious
- Note: "Think about flexbox properties"
*/

/* Clearfix */

@mixin clearfix {
    &::after {
      display: block;
      content: "";
      clear: both;
    }
  }
  
  /* Direction */
  
  @mixin dir-direction($value) {
    @if $value==ltr {
      html[dir="ltr"] & {
        direction: ltr;
      }
  
      html[dir="rtl"] & {
        direction: rtl;
      }
    }
  
    @else if $value==rtl {
      html[dir="ltr"] & {
        direction: rtl;
      }
  
      html[dir="rtl"] & {
        direction: ltr;
      }
    }
  }
  
  /* Float */
  
  @mixin dir-float($value) {
    @if $value==left {
      html[dir="ltr"] & {
        float: left;
      }
  
      html[dir="rtl"] & {
        float: right;
      }
    }
  
    @else if $value==right {
      html[dir="ltr"] & {
        float: right;
      }
  
      html[dir="rtl"] & {
        float: left;
      }
    }
  
    @else {
      float: none;
    }
  }
  
  /* Margin */
  
  @mixin dir-margin($top, $right, $bottom, $left) {
    html[dir="ltr"] & {
      margin: $top $right $bottom $left;
    }
  
    html[dir="rtl"] & {
      margin: $top $left $bottom $right;
    }
  }
  
  @mixin dir-margin-left($value) {
    html[dir="ltr"] & {
      margin-left: $value;
    }
  
    html[dir="rtl"] & {
      margin-right: $value;
    }
  }
  
  @mixin dir-margin-right($value) {
    html[dir="ltr"] & {
      margin-right: $value;
    }
  
    html[dir="rtl"] & {
      margin-left: $value;
    }
  }
  
  /* Padding */
  
  @mixin dir-padding($top, $right, $bottom, $left) {
    html[dir="ltr"] & {
      padding: $top $right $bottom $left;
    }
  
    html[dir="rtl"] & {
      padding: $top $left $bottom $right;
    }
  }
  
  @mixin dir-padding-left($value) {
    html[dir="ltr"] & {
      padding-left: $value;
    }
  
    html[dir="rtl"] & {
      padding-right: $value;
    }
  }
  
  @mixin dir-padding-right($value) {
    html[dir="ltr"] & {
      padding-right: $value;
    }
  
    html[dir="rtl"] & {
      padding-left: $value;
    }
  }
  
  /* Left And Right For Absolute Position */
  
  @mixin dir-left($value) {
    html[dir="ltr"] & {
      left: $value;
    }
  
    html[dir="rtl"] & {
      right: $value;
    }
  }
  
  @mixin dir-right($value) {
    html[dir="ltr"] & {
      right: $value;
    }
  
    html[dir="rtl"] & {
      left: $value;
    }
  }
  
  /* Border */
  
  @mixin dir-border-left($value) {
    html[dir="ltr"] & {
      border-left: $value;
    }
  
    html[dir="rtl"] & {
      border-right: $value;
    }
  }
  
  @mixin dir-border-right($value) {
    html[dir="ltr"] & {
      border-right: $value;
    }
  
    html[dir="rtl"] & {
      border-left: $value;
    }
  }
  